using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

namespace Reflection_리플렉션_
{
    //Attribute = 컴파일 할 때 주석을 런타임에 확인할 수 있도록 함
    class Program
    {
        class Important : System.Attribute
        {
            string message;
            public Important(string message) { this.message = message; }

        }
        class Monster
        {
            //hp에 "아주 중요한 부분"이라는 주석을 달아 런타임에 확인할 수 있도록 하고싶을 때
            [Important("very Important")]
            public int hp;

            protected int attack;
            private float speed;

            void Attack() { }
        }

        static void Main(string[] args)
        {
            //Reflection : X-ray와 같다. class 내에 모든 정보들을 다 알 수 있음
            Monster monster = new Monster();
            Type type = monster.GetType();

            //-->Reflection을 이용해 class Monster 내의 정보를 확인하기
            var fields = type.GetFields(System.Reflection.BindingFlags.Public
                | System.Reflection.BindingFlags.NonPublic
                | System.Reflection.BindingFlags.Static
                | System.Reflection.BindingFlags.Instance);

            foreach(FieldInfo field in fields)
            {
                string access = "protected";
                if (field.IsPublic)
                    access = "public";
                else if (field.IsPrivate)
                    access = "private";

                var attributes = field.GetCustomAttributes();//-->컴파일 해보면 위에서 만들었던 주석을 볼 수 있다.

                Console.WriteLine($"{access} {field.FieldType.Name} {field.Name} ");//-->class monster 안에 있는 정보들을 얻어오게 됨
            }
        }
    }
}
